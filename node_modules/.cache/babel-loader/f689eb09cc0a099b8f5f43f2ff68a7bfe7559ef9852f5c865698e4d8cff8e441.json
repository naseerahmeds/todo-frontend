{"ast":null,"code":"var _jsxFileName = \"D:\\\\ToDoApp\\\\todo-frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../api\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  onTaskCreated\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      toast.error(\"Title is required\");\n      return;\n    }\n    try {\n      const res = await api.post(\"/tasks\", {\n        title,\n        dueDate,\n        status: \"in progress\",\n        priority: \"normal\"\n      });\n      onTaskCreated(res.data);\n      setTitle(\"\");\n      setDueDate(\"\");\n      toast.success(\"Task created\");\n    } catch (err) {\n      toast.error(\"Create failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      style: {\n        marginRight: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value),\n      style: {\n        marginRight: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"DTAN73vKtNtsNtjNaIUwr1MIh+8=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","api","toast","jsxDEV","_jsxDEV","TaskForm","onTaskCreated","_s","title","setTitle","dueDate","setDueDate","handleSubmit","e","preventDefault","trim","error","res","post","status","priority","data","success","err","onSubmit","style","marginBottom","children","type","placeholder","value","onChange","target","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ToDoApp/todo-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction TaskForm({ onTaskCreated }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      toast.error(\"Title is required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await api.post(\"/tasks\", {\r\n        title,\r\n        dueDate,\r\n        status: \"in progress\",\r\n        priority: \"normal\"\r\n      });\r\n      onTaskCreated(res.data);\r\n      setTitle(\"\");\r\n      setDueDate(\"\");\r\n      toast.success(\"Task created\");\r\n    } catch (err) {\r\n      toast.error(\"Create failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: \"1rem\" }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Task title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        style={{ marginRight: \"0.5rem\" }}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={dueDate}\r\n        onChange={(e) => setDueDate(e.target.value)}\r\n        style={{ marginRight: \"0.5rem\" }}\r\n      />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;MACjBb,KAAK,CAACc,KAAK,CAAC,mBAAmB,CAAC;MAChC;IACF;IAEA,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAE;QACnCV,KAAK;QACLE,OAAO;QACPS,MAAM,EAAE,aAAa;QACrBC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFd,aAAa,CAACW,GAAG,CAACI,IAAI,CAAC;MACvBZ,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdT,KAAK,CAACoB,OAAO,CAAC,cAAc,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZrB,KAAK,CAACc,KAAK,CAAC,eAAe,CAAC;IAC9B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMoB,QAAQ,EAAEZ,YAAa;IAACa,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5DvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEtB,KAAM;MACbuB,QAAQ,EAAGlB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;MAC1CL,KAAK,EAAE;QAAEQ,WAAW,EAAE;MAAS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFjC,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEpB,OAAQ;MACfqB,QAAQ,EAAGlB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;MAC5CL,KAAK,EAAE;QAAEQ,WAAW,EAAE;MAAS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFjC,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX;AAAC9B,EAAA,CA7CQF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}